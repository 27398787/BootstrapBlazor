@page "/markdowns"
@using Microsoft.Extensions.DependencyInjection
@inject NugetVersionService VersionManager

<h3>Markdown 编辑器</h3>

<h4>提供 Markdown 语法支持的文本编辑器</h4>

<p><b>注意事项：</b></p>

<p>本组件依赖于 <a href="https://www.nuget.org/packages?q=BootstrapBlazor.Markdown" target="_blank"><code>BootstrapBlazor.Markdown</code></a>，使用本组件时需要引用其组件包</p>

<p><b>Nuget 包安装</b></p>

<p>使用 <a href="https://www.nuget.org/packages?q=BootstrapBlazor.Markdown" target="_blank">nuget.org</a> 进行 <code>BootstrapBlazor.Markdown</code> 组件的安装</p>

<div class="code-label">.NET CLI</div>
<Pre class="no-highlight">dotnet add package BootstrapBlazor.Chart --version @Version</Pre>

<div class="code-label">PackageReference</div>
<Pre class="no-highlight">&lt;PackageReference Include="BootstrapBlazor.Chart" Version="@Version" /&gt;</Pre>

<div class="code-label">Package Manager</div>
<Pre class="no-highlight">Install-Package BootstrapBlazor.Chart -Version @Version</Pre>

<h4>CSS 文件</h4>

<Pre>&lt;link rel="stylesheet" href="_content/BootstrapBlazor.Markdown/css/bootstrap.blazor.markdown.min.css" /&gt;</Pre>

<h4>JS 文件</h4>

<Pre>&lt;script src="_content/BootstrapBlazor.Markdown/js/bootstrap.blazor.markdown.min.js"&gt;&lt;/script&gt;</Pre>

<Block Title="普通用法" Introduction="">
    <p>输入 Markdown 相关代码后，点击下方相关按钮查看数据</p>
    <div style="width: 100%; height: 300px;">
        <Markdown @ref="MarkdownElement" />
    </div>
    <div class="mt-3">
        <div class="btn-group">
            <Button Text="Markdown 源码" OnClick="@GetMarkdownString"></Button>
            <Button Text="HTML 源码" OnClick="@GetHTMLString"></Button>
            <Button Text="选中的Text" OnClick="@GetSelectedString"></Button>
            <Button Text="@ShowHideButtonString" OnClick="@ShowHideEditor"></Button>
            <Button Text="插入文本" OnClick="@InsertText"></Button>
        </div>
    </div>
    <div class="mt-3">
        <textarea class="form-control" rows="6" disabled="disabled">
            @MarkdownString
        </textarea>
    </div>
    <div class="mt-3">
        <textarea class="form-control" rows="6" disabled="disabled">
            @HtmlString
        </textarea>
    </div>
</Block>

<Block Title="常用属性">
    <p>设置 Markdown 编辑器最小高度300px，默认高度500px，提示信息这是Markdown，Tab方式显示，默认显示所见即所得页面</p>
    <Markdown Height="500" MinHeight="300" Placeholder="这是Markdown" PreviewStyle="PreviewStyle.Tab" InitialEditType="InitialEditType.Wysiwyg"></Markdown>
</Block>

<Block Title="输入Html转为Markdown">
    <p>可以使用IsHtml="true"来使用Html自动转换为Markdown</p>
    <Markdown Value="<h1>这里是html的H1</h1><h2>这里是Html的H2</h2>" IsHtml="true" />
</Block>

@code {
    private string? MarkdownString { get; set; }

    private string? HtmlString { get; set; }

    private Markdown? MarkdownElement { get; set; }

    private string ShowHideButtonString { get; set; } = "隐藏Editor";

    private async Task GetMarkdownString()
    {
        if (MarkdownElement != null) MarkdownString = await MarkdownElement.GetMarkdownString();
    }

    private async Task GetHTMLString()
    {
        if (MarkdownElement != null) HtmlString = await MarkdownElement.GetMarkdownHtmlString();
    }

    private async Task GetSelectedString()
    {
        if (MarkdownElement != null) MarkdownString = await MarkdownElement.GetSelectedText();
    }

    private async Task InsertText()
    {
        if (MarkdownElement != null) await MarkdownElement.InsertText("# 这是插入的内容");
    }

    private async Task ShowHideEditor()
    {
        if (MarkdownElement != null)
        {
            if (ShowHideButtonString == "隐藏Editor")
            {
                ShowHideButtonString = "显示Editor";
                await MarkdownElement.Hide();
            }
            else
            {
                ShowHideButtonString = "隐藏Editor";
                await MarkdownElement.Show();
            }
        }
    }

    /// <summary>
    /// 获得/设置 版本号字符串
    /// </summary>
    private string Version { get; set; } = "fetching";

    /// <summary>
    /// OnInitializedAsync 方法
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        Version = await VersionManager.GetVersionAsync("bootstrapblazor.markdown");
        MarkdownElement?.SetMarkdown("# 这里是初始化的Markdown");
    }
}
