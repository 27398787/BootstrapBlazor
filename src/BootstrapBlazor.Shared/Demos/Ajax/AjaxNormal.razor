@using BootstrapBlazor.Components
@using System.Text.Json

<div class="my-2">
    <b>特别注意：</b>
</div>
<div>这里只是进行了登录模拟，并没有真正的调用 <code>HttpContext.SignInAsync</code>，真实使用时需要在登录完成后对页面进行刷新，否则无法真正的登录成功。</div>

<div class="mb-3"><code>@ResultMessage</code></div>
<Button OnClick="Success">登录成功</Button>
<Button OnClick="Fail">登录失败</Button>

@code
{
    private string? ResultMessage { get; set; }

    [Inject]
    [NotNull]
    private AjaxService? AjaxService { get; set; }

    [Inject]
    [NotNull]
    private SwalService? SwalService { get; set; }

    private async Task Success()
    {
        var option = new AjaxOption
        {
            Url = "/api/Login",
            Data = new User() { UserName = "admin", Password = "123456" }
        };
        var result = await AjaxService.InvokeAsync(option);
        if (result == null)
        {
            ResultMessage = "响应失败";
        }
        else
        {
            ResultMessage = result;
            var doc = JsonDocument.Parse(result);
            if (200 == doc.RootElement.GetProperty("code").GetInt32())
            {
                await SwalService.Show(new SwalOption() { Content = "登录成功！", Category = SwalCategory.Success });
            }
            else
            {
                await SwalService.Show(new SwalOption() { Content = $"登录失败:{doc.RootElement.GetProperty("message").GetString()}", Category = SwalCategory.Error });
            }
        }
    }

    private async Task Fail()
    {
        var option = new AjaxOption
            {
                Url = "/api/Login",
                Data = new User() { UserName = "admin", Password = "1234567" }
            };
        var result = await AjaxService.InvokeAsync(option);
        if (result == null)
        {
            ResultMessage = "响应失败";
        }
        else
        {
            ResultMessage = result;
            var doc = JsonDocument.Parse(result);
            if (200 == doc.RootElement.GetProperty("code").GetInt32())
            {
                await SwalService.Show(new SwalOption() { Content = "登录成功！", Category = SwalCategory.Success });
            }
            else
            {
                await SwalService.Show(new SwalOption() { Content = $"登录失败:{doc.RootElement.GetProperty("message").GetString()}", Category = SwalCategory.Error });
            }
        }
    }

    /// <summary>
    /// 登录模拟类
    /// </summary>
    class User
    {
        /// <summary>
        /// 用户名
        /// </summary>
        public string? UserName { get; set; }

        /// <summary>
        /// 密码
        /// </summary>
        public string? Password { get; set; }
    }
}
